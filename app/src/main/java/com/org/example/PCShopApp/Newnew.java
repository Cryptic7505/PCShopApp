/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.org.example.PCShopApp;

import javax.swing.*;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.sql.*;

import javax.swing.JOptionPane;
import javax.swing.JTextField;

import com.formdev.flatlaf.FlatDarkLaf;
import com.formdev.flatlaf.FlatLaf;

/**
 *
 * @author Catmosphere, Cryptic
 */
public class Newnew extends javax.swing.JFrame {
    private final Inventory parentInventory;

    public Newnew() {
        this(null);
    }
    public Newnew(Inventory parentInventory) {
        this.parentInventory = parentInventory;

        FlatLaf.registerCustomDefaultsSource("com.org.example.PCShopApp");
        FlatDarkLaf.setup();
        initComponents();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);

        populateTypeCombo();
        setupPlaceholders();
    }

    private void populateTypeCombo() {
        try (Connection conn = DatabaseConnection.getConnection(); PreparedStatement ps = conn.prepareStatement(
                "SELECT `ID`, `Type` FROM componenttype")) {
            ResultSet rs = ps.executeQuery();
            CBType.removeAllItems();
            CBType.addItem("Select Type");
            while (rs.next()) {
                CBType.addItem(rs.getInt("ID") + " - " + rs.getString("Type"));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void setupPlaceholders() {
        setupPlaceholder(TFName, "Name");
        setupPlaceholder(TFModel, "Model");
        setupPlaceholder(TFPrice, "Price");
    }

    private void setupPlaceholder(JTextField field, String placeholder) {
        field.setText(placeholder);
        field.setForeground(java.awt.Color.GRAY);
        field.addFocusListener(new FocusAdapter() {
            @Override
            public void focusGained(FocusEvent e) {
                if (field.getText().equals(placeholder)) {
                    field.setText("");
                    field.setForeground(java.awt.Color.WHITE);
                }
            }

            @Override
            public void focusLost(FocusEvent e) {
                if (field.getText().isEmpty()) {
                    field.setText(placeholder);
                    field.setForeground(java.awt.Color.GRAY);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        BTReset = new javax.swing.JButton();
        CBType = new javax.swing.JComboBox<>();
        TFName = new javax.swing.JTextField();
        TFModel = new javax.swing.JTextField();
        TFPrice = new javax.swing.JTextField();
        BTAddItem = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("New Part");

        jPanel1.setBackground(new java.awt.Color(88, 105, 163));

        BTReset.setBackground(new java.awt.Color(35, 41, 66));
        BTReset.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BTReset.setText("Reset");
        BTReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTResetActionPerformed(evt);
            }
        });

        CBType.setBackground(new java.awt.Color(42, 50, 79));
        CBType.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        CBType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Type", " " }));
        CBType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBTypeActionPerformed(evt);
            }
        });

        TFName.setBackground(new java.awt.Color(66, 78, 122));
        TFName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        TFName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TFName.setText("Name");
        TFName.setAutoscrolls(false);

        TFModel.setBackground(new java.awt.Color(66, 78, 122));
        TFModel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        TFModel.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TFModel.setText("Model");
        TFModel.setAutoscrolls(false);

        TFPrice.setBackground(new java.awt.Color(66, 78, 122));
        TFPrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        TFPrice.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TFPrice.setText("Price");
        TFPrice.setAutoscrolls(false);

        BTAddItem.setBackground(new java.awt.Color(35, 41, 66));
        BTAddItem.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BTAddItem.setText("Add Item");
        BTAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTAddItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(BTReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TFModel)
                    .addComponent(TFPrice)
                    .addComponent(TFName)
                    .addComponent(CBType, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(BTAddItem, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                .addGap(21, 21, 21))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(TFName, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TFModel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TFPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(CBType, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BTReset, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BTAddItem, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void BTResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTResetActionPerformed
        TFName.setText("Name");
        TFName.setForeground(java.awt.Color.GRAY);
        TFModel.setText("Model");
        TFModel.setForeground(java.awt.Color.GRAY);
        TFPrice.setText("Price");
        TFPrice.setForeground(java.awt.Color.GRAY);
        CBType.setSelectedIndex(0);
    }//GEN-LAST:event_BTResetActionPerformed

    private void CBTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CBTypeActionPerformed

    private void BTAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTAddItemActionPerformed
        String name = TFName.getText();
        String model = TFModel.getText();
        String priceText = TFPrice.getText();
        String typeSelection = (String) CBType.getSelectedItem();

        if (name.isEmpty() || name.equals("Name")
                || model.isEmpty() || model.equals("Model")
                || priceText.isEmpty() || priceText.equals("Price")
                || typeSelection == null || typeSelection.startsWith("Select")) {
            JOptionPane.showMessageDialog(this, "Please fill out all fields.");
            return;
        }
        try {
            double price = Double.parseDouble(priceText);
            int typeId = Integer.parseInt(typeSelection.split(" - ")[0]);
            String sql = "INSERT INTO partlist (`Part Name`,`Model`,`Type`,`Stock`,`Price`,`Restock?`) VALUES (?,?,?,?,?,?)";
            try (Connection conn = DatabaseConnection.getConnection(); PreparedStatement ps = conn.prepareStatement(sql)) {
                ps.setString(1, name);
                ps.setString(2, model);
                ps.setInt(3, typeId);
                ps.setInt(4, 0);
                ps.setDouble(5, price);
                ps.setBoolean(6, false);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(this, "Item added successfully.");
                // Refresh parent inventory table
                if (parentInventory != null) {
                    parentInventory.loadInventoryTable();
                }
                dispose();
            }
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Enter a valid price.");
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Database error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_BTAddItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Newnew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Newnew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Newnew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Newnew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Newnew().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTAddItem;
    private javax.swing.JButton BTReset;
    private javax.swing.JComboBox<String> CBType;
    private javax.swing.JTextField TFModel;
    private javax.swing.JTextField TFName;
    private javax.swing.JTextField TFPrice;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
